#pragma checksum "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\Table\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d03a2845ee7de2fd27b184dd3fdb6fe1f864a197"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Table_Index), @"mvc.1.0.view", @"/Views/Table/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\_ViewImports.cshtml"
using PtixiakiReservations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\_ViewImports.cshtml"
using PtixiakiReservations.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d03a2845ee7de2fd27b184dd3fdb6fe1f864a197", @"/Views/Table/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"969a826d033cce8f9b118cb48699c205b151f70c", @"/Views/_ViewImports.cshtml")]
    public class Views_Table_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<PtixiakiReservations.Models.Table>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\Table\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>Seats</h1>\r\n\r\n<canvas id=\"c\" width=\"600\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\r\n\r\n<input type=\"submit\" value=\"Reservation\" class=\"btn btn-primary\" id=\"reservetion\" />\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        var canvas = new fabric.Canvas('c');
        const qstr = window.location.search;

        const urlParams = new URLSearchParams(qstr);
        const shopid = urlParams.get('shopid');
        const date = urlParams.get('date');
         const people = urlParams.get('people');

        var selectedTable;

        var moveHandler = function (evt) {
            var selected = evt.target;

            if (selectedTable != selected && selectedTable != null) {
                selectedTable.item(0).set('fill', '#eef');
            }
            if (selected.item(1).get(""text"") < people) {
                alert(""You need a table for more people"");
            } else if (selected.item(0).get(""fill"") == ""red"") {
                alert(""Already Taken"");
            } else {
                selected.item(0).set('fill', 'green');
                selectedTable = selected;
            }

        };
        canvas.on('object:selected', moveHandler);

        $(""document"").re");
                WriteLiteral("ady(function () {         \r\n            $.ajax(\r\n                {\r\n                    type: \"get\",\r\n                    url: \'");
#nullable restore
#line 47 "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\Table\Index.cshtml"
                     Write(Url.Action("get_data", "Table"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    dataType: 'json',
                    data: { ""shopid"": shopid, ""date"": date, ""people"": people },
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                       var tables = jQuery.parseJSON(JSON.stringify(data));
                        console.log(""table= "");
                        console.log(tables);
                        for (var i = 0; i < tables.length; i++) {
                            //   console.log(res[0].tableId);                           
                            if (5 == tables[i].id) {

                                var rect = new fabric.Rect({
                                    width: 100,
                                    height: 100,
                                    fill: 'red',
                                    scaleY: 0.5,
                                    originX: 'center',
                                    originY: 'center'

                        ");
                WriteLiteral(@"        });

                            } else {
                                var rect = new fabric.Rect({
                                    width: 100,
                                    height: 100,
                                    fill: '#eef',
                                    scaleY: 0.5,
                                    originX: 'center',
                                    originY: 'center'

                                });
                            }
                            var str = tables[i].people + """";

                            var text = new fabric.Text(str, {
                                fontSize: 15,
                                originX: 'center',
                                originY: 'center',
                                selectable: false
                            });

                            var group = new fabric.Group([rect, text], {
                                left: tables[i].x,
                                top: t");
                WriteLiteral(@"ables[i].y,
                                subTargetCheck: true,
                                hasControls: false,
                                selectable: true,
                                lockMovementX: true, lockMovementY: true,
                                id: tables[i].id,
                                angle: 0
                            });

                            canvas.add(group);



                        }

                    },
                    error: function (data) { alert(""fail to save""); },
                    accept: 'application/json'
                });$.ajax(
                {
                    type: ""get"",
                    url: '");
#nullable restore
#line 112 "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\Table\Index.cshtml"
                     Write(Url.Action("isFree", "Reservations"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    dataType: 'json',
                    data: { ""shopid"": shopid, ""date"": date, ""people"": people },
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                      var  res = jQuery.parseJSON(JSON.stringify(data));
                        console.log(""res= "");
                        console.log(res);
                        var canvasObjects = canvas.getObjects();
                        for (obj in canvasObjects) {
                            if (canvasObjects[obj].get('type') == 'group') {                              
                                for (var i = 0; i < res.length; i++) {
                                    if (canvasObjects[obj].get('id') == res[i].tableId) {
                                        console.log(""win"");
                                        canvasObjects[obj].item(0).set('fill', 'red');
                                    }                         
               ");
                WriteLiteral(@"                 }
                            }
                        }
                    },
                    error: function (data) { alert(""fail to save""); },
                    accept: 'application/json'
                });
       
        });


        $(""#reservetion"").click(function () {

            var res = {};
            res.people = people;
            res.tableId = selectedTable.get(""id"");
            res.date = date;

            $.ajax(
                {
                    type: ""post"",
                    url: '");
#nullable restore
#line 149 "C:\Users\leonidas\source\repos\PtixiakiReservations\PtixiakiReservations\Views\Table\Index.cshtml"
                     Write(Url.Action("MakeRes", "Reservations"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    dataType: 'json',     
                    data: res,
                    success: function (data) {
                    var  res = jQuery.parseJSON(JSON.stringify(data));                 
                        var url = ""/Reservations/Details?ID="" + res.id; 
                        window.location.href = url;
                    },
                    error: function (data) { alert(""fail to save""); },
                    accept: 'application/json'
                })

        });

    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<PtixiakiReservations.Models.Table>> Html { get; private set; }
    }
}
#pragma warning restore 1591
